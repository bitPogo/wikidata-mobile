import kotlin.collections.List;
import kotlinx.datetime.Instant;
import tech.antibytes.wikibase.store.entity.domain.model.EntityModelContract.EntityType;

CREATE TABLE Entity (
    id TEXT NOT NULL UNIQUE PRIMARY KEY,
    type TEXT AS EntityType NOT NULL,
    revision INTEGER NOT NULL,
    lastModified INTEGER AS Instant NOT NULL,
    edibility INTEGER AS Boolean NOT NULL
);

CREATE TABLE Term (
    entityId TEXT NOT NULL,
    language TEXT NOT NULL,
    label TEXT,
    description TEXT,
    aliases TEXT AS List<String> NOT NULL,
    FOREIGN KEY (entityId) REFERENCES Entity(id),
    CONSTRAINT monoligualEntitId PRIMARY KEY (entityId, language)
);

selectEntityById:
SELECT *
FROM Entity
WHERE id = :whereId;

hasTerm:
SELECT COUNT(1)
FROM Term
WHERE entityId = :whereId AND language = :whereLanguage;

selectMonoligualEntityById:
SELECT id, type, revision, lastModified, edibility, label, description, aliases
FROM Entity, Term
WHERE entityId = :whereId AND language = :whereLanguage;

addEntity:
INSERT INTO Entity(id, type, revision, lastModified, edibility)
VALUES (?, ?, ?, ?, ?);

updateEntity:
UPDATE Entity
SET revision = ?, lastModified = ?, edibility = ?
WHERE id = :whereId;

addTerm:
INSERT INTO Term(entityId, language, label, description, aliases)
VALUES (?, ?, ?, ?, ?);

updateTerm:
UPDATE Term
SET label = ?, description = ?, aliases = ?
WHERE entityId = :whereId AND language = :whereLanguage;

deleteTerm:
DELETE FROM Term
WHERE entityId = :whereId AND language = :whereLanguage;
